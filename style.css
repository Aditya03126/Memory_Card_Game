/* Global Styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

:root {
    /* Modern Color Palette */
    --primary-color: #2D3FE7;
    --secondary-color: #6C63FF;
    --accent-color: #FF6B6B;
    --success-color: #4CAF50;
    --light-color: #F8F9FD;
    --dark-color: #2C3E50;
    
    /* Card Designs */
    --card-back: linear-gradient(145deg, var(--secondary-color), var(--primary-color));
    --card-border: rgba(255, 255, 255, 0.15);
    --card-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
    
    /* UI Elements */
    --modal-bg: rgba(44, 62, 80, 0.85);
    --surface-color: #FFFFFF;
    --text-primary: #2C3E50;
    --text-secondary: #606F7B;
    
    /* Responsive Sizes */
    --card-size: clamp(80px, 15vw, 100px);
    --card-size-medium: clamp(65px, 12vw, 80px);
    --card-size-small: clamp(50px, 10vw, 65px);
    
    /* Spacing System */
    --spacing-xs: 0.25rem;
    --spacing-sm: 0.5rem;
    --spacing-md: 1rem;
    --spacing-lg: 1.5rem;
    --spacing-xl: 2rem;
    
    /* Animation Timing */
    --transition-fast: 150ms ease;
    --transition-normal: 300ms ease;
    --transition-slow: 500ms ease;
}

body {
    background: linear-gradient(135deg, var(--light-color) 0%, #E2E8F0 100%);
    min-height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: var(--spacing-md);
    color: var(--text-primary);
    line-height: 1.6;
}

.game-container {
    background-color: var(--surface-color);
    border-radius: 20px;
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.08);
    width: 100%;
    max-width: 1000px;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    gap: var(--spacing-lg);
    padding-bottom: var(--spacing-xl);
    transform: translateY(0);
    transition: transform var(--transition-normal);
}

.game-container:hover {
    transform: translateY(-5px);
}

/* Header Styles */
header {
    background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
    color: white;
    padding: var(--spacing-xl);
    text-align: center;
    position: relative;
    overflow: hidden;
}

header::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: url("data:image/svg+xml,%3Csvg width='100' height='100' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M11 18c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm48 25c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm-43-7c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm63 31c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zM34 90c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm56-76c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zM12 86c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm28-65c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm23-11c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-6 60c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm29 22c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zM32 63c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm57-13c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-9-21c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM60 91c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM35 41c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2z' fill='%23ffffff' fill-opacity='0.05' fill-rule='evenodd'/%3E%3C/svg%3E");
    opacity: 0.5;
}

header h1 {
    margin-bottom: var(--spacing-lg);
    font-weight: 700;
    font-size: 2.5rem;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    letter-spacing: -0.5px;
}

.game-info {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    align-items: center;
    gap: var(--spacing-lg);
    position: relative;
    z-index: 1;
}

.stats {
    display: flex;
    gap: 20px;
}

.moves, .timer {
    font-size: 1.1rem;
}

.controls {
    display: flex;
    flex-wrap: wrap;
    gap: 15px;
    align-items: center;
}

#new-game-btn {
    background-color: var(--accent-color);
    color: white;
    border: none;
    padding: 12px 24px;
    border-radius: 50px;
    cursor: pointer;
    font-size: 1rem;
    font-weight: 600;
    transition: all var(--transition-normal);
    box-shadow: 0 4px 12px rgba(255, 107, 107, 0.2);
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

#new-game-btn:hover {
    background-color: #ff5252;
    transform: translateY(-2px);
    box-shadow: 0 6px 16px rgba(255, 107, 107, 0.3);
}

#new-game-btn:active {
    transform: translateY(0);
    box-shadow: 0 2px 8px rgba(255, 107, 107, 0.2);
}

select {
    padding: 6px 10px;
    border-radius: 4px;
    border: 1px solid #ddd;
    font-size: 0.9rem;
}

/* Game Board Styles */
.game-board {
    display: grid;
    grid-template-columns: repeat(4, var(--card-size));
    grid-gap: 10px;
    padding: 20px;
    justify-content: center;
}

/* Card Styles */
.card {
    width: var(--card-size);
    height: var(--card-size);
    position: relative;
    perspective: 1000px;
    cursor: pointer;
}

.card-inner {
    width: 100%;
    height: 100%;
    transform-style: preserve-3d;
    transition: transform 0.5s;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.card.flipped .card-inner {
    transform: rotateY(180deg);
}

.card-front, .card-back {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    border-radius: 8px;
    display: flex;
    justify-content: center;
    align-items: center;
}

.card-front {
    background-color: white;
    transform: rotateY(180deg);
}

.card-back {
    background: var(--card-back);
    border: 2px solid var(--card-border);
}

.card-front img, .card-front i {
    max-width: 80%;
    max-height: 80%;
    object-fit: contain;
}

.card.matched .card-front {
    background-color: rgba(40, 167, 69, 0.1);
    border: 2px solid var(--success-color);
    animation: pulse 0.5s;
}

@keyframes pulse {
    0% { transform: scale(1) rotateY(180deg); }
    50% { transform: scale(1.1) rotateY(180deg); }
    100% { transform: scale(1) rotateY(180deg); }
}

/* Score Panel */
.score-panel {
    padding: 15px 20px;
    background-color: #f9f9f9;
    border-top: 1px solid #eee;
}

.high-scores h3 {
    margin-bottom: 10px;
    color: var(--dark-color);
    font-size: 1.1rem;
}

#high-scores-list {
    list-style-type: none;
    padding: 0;
}

#high-scores-list li {
    padding: 5px 0;
    border-bottom: 1px solid #eee;
    display: flex;
    justify-content: space-between;
}

/* Modal Styles */
.modal {
    display: none;
    position: fixed;
    z-index: 1;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: var(--modal-bg);
    align-items: center;
    justify-content: center;
}

.modal-content {
    background-color: white;
    padding: 25px;
    border-radius: 10px;
    width: 90%;
    max-width: 400px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
    text-align: center;
    animation: modalFadeIn 0.3s;
}

@keyframes modalFadeIn {
    from { opacity: 0; transform: translateY(-50px); }
    to { opacity: 1; transform: translateY(0); }
}

.close-modal {
    float: right;
    font-size: 1.5rem;
    cursor: pointer;
    color: #aaa;
}

.close-modal:hover {
    color: var(--dark-color);
}

.modal h2 {
    margin-bottom: 10px;
    color: var(--primary-color);
}

.win-stats {
    margin: 20px 0;
    font-size: 1.1rem;
}

#play-again-btn {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    border: none;
    padding: 12px 20px;
    border-radius: 4px;
    cursor: pointer;
    font-size: 1rem;
    transition: opacity 0.3s;
}

#play-again-btn:hover {
    opacity: 0.9;
}

/* Responsive Styles */
@media (max-width: 768px) {
    .game-info {
        flex-direction: column;
        align-items: stretch;
    }
    
    .stats, .controls {
        justify-content: center;
    }
    
    .game-board {
        grid-template-columns: repeat(4, var(--card-size-medium));
    }
    
    .card {
        width: var(--card-size-medium);
        height: var(--card-size-medium);
    }
}

@media (max-width: 480px) {
    .game-board {
        grid-template-columns: repeat(4, var(--card-size-small));
        grid-gap: 8px;
        padding: 15px;
    }
    
    .card {
        width: var(--card-size-small);
        height: var(--card-size-small);
    }
    
    header {
        padding: 15px 10px;
    }
    
    header h1 {
        font-size: 1.5rem;
    }
    
    .moves, .timer {
        font-size: 0.9rem;
    }
    
    .controls {
        flex-direction: column;
        gap: 10px;
    }
    
    select, #new-game-btn {
        width: 100%;
    }
}

/* Animation for card flip */
@keyframes flip {
    0% { transform: rotateY(0); }
    100% { transform: rotateY(180deg); }
}

/* Animation for card match */
@keyframes match {
    0% { transform: scale(1); }
    50% { transform: scale(1.1); }
    100% { transform: scale(1); }
}

/* Animation for card mismatch */
@keyframes shake {
    0%, 100% { transform: translateX(0); }
    20%, 60% { transform: translateX(-5px); }
    40%, 80% { transform: translateX(5px); }
}

/* Difficulty-specific grid layouts */
.game-board.easy {
    grid-template-columns: repeat(4, var(--card-size));
}

.game-board.medium {
    grid-template-columns: repeat(6, var(--card-size-medium));
}

.game-board.hard {
    grid-template-columns: repeat(8, var(--card-size-small));
}

@media (max-width: 768px) {
    .game-board.easy {
        grid-template-columns: repeat(4, var(--card-size-medium));
    }
    
    .game-board.medium {
        grid-template-columns: repeat(4, var(--card-size-medium));
        grid-template-rows: repeat(6, var(--card-size-medium));
    }
    
    .game-board.hard {
        grid-template-columns: repeat(4, var(--card-size-small));
        grid-template-rows: repeat(8, var(--card-size-small));
    }
}

@media (max-width: 480px) {
    .game-board.easy {
        grid-template-columns: repeat(4, var(--card-size-small));
    }
    
    .game-board.medium {
        grid-template-columns: repeat(3, var(--card-size-small));
        grid-template-rows: repeat(8, var(--card-size-small));
    }
    
    .game-board.hard {
        grid-template-columns: repeat(4, var(--card-size-small));
        grid-template-rows: repeat(8, var(--card-size-small));
    }
}